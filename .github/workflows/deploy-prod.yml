# Simple workflow for deploying static content to GitHub Pages
name: Deploy for production

# workflowの実行をトリガするイベントを記述する
on:
  # 「v0.1.0」のようなリリースタグ作成にトリガーして、workflowを実行
  push:
    tags:
      - v*
  # 手動実行
  workflow_dispatch:
    # NOTE: inputsのデフォルト値を変更した場合はenvのデフォルト値も変更すること
    inputs:
      DRY_RUN:
        type: boolean
        description: 'dry run'
        required: true
        default: true

env:
  # NOTE: デフォルト値を変更した場合はenvのデフォルト値も変更すること
  DRY_RUN: ${{ github.event.inputs.DRY_RUN }}

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Single deploy job since we're just deploying
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install node and pnpm
        run: |
          set -x
          export PROTO_VERSION="$(grep 'PROTO_VERSION' ./portfolio/docker/common/proto/compose.yml | grep -oE '[0-9]+\.[0-9]+\.[0-9]+')"
          export NODE_VERSION="$(grep 'NODE_VERSION' ./portfolio/docker/frontend/vite/compose.yml | grep -oE '[0-9]+\.[0-9]+\.[0-9]+')"
          export PNPM_VERSION="$(grep 'PNPM_VERSION' ./portfolio/docker/frontend/vite/compose.yml | grep -oE '[0-9]+\.[0-9]+\.[0-9]+')"
          curl --proto '=https' --tlsv1.2 -sSfL 'https://moonrepo.dev/install/proto.sh' | bash -s -- "${PROTO_VERSION}" --yes --no-profile
          export PROTO_HOME=~/.proto
          export PATH=~/.proto/shims:~/.proto/bin:$PATH
          proto --version
          proto install node "${NODE_VERSION}"
          proto install pnpm "${PNPM_VERSION}"
          node -v
          pnpm -v
      - name: Build react artifacts
        run: |
          set -x
          export PROTO_HOME=~/.proto
          export PATH=~/.proto/shims:~/.proto/bin:$PATH
          cd ./portfolio/app/frontend
          pnpm i --frozen-lockfile
          pnpm run build --mode production
          cp ./404.html ./dist/
      - name: Setup Pages
        uses: actions/configure-pages@v5
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # Upload entire repository
          path: './portfolio/app/frontend/dist'
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
